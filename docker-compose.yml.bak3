version: '3.8'

services:
  # --- Hadoop Ecosystem ---
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    ports:
      - '9870:9870'
      - '9000:9000'
    networks:
      - data-stack

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    ports:
      - '9864:9864'
    networks:
      - data-stack

  # --- Spark Ecosystem ---
  spark-master:
    image: bde2020/spark-master:3.1.2-hadoop3.2
    container_name: spark-master
    ports:
      - '8081:8080'
      - '7077:7077'
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_CONF_spark_sql_warehouse_dir=/data/warehouse
    volumes:
      - ./spark_jobs:/opt/spark/jobs
      - ./data:/data
    networks:
      - data-stack

  spark-worker:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - 'SPARK_MASTER=spark://spark-master:7077'
    ports:
      - '8082:8080'
    networks:
      - data-stack

  # --- Airflow ---
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    user: "${AIRFLOW_UID:-50000}"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config/spark:/opt/airflow/config/spark
      - ./config/hadoop:/opt/hadoop/etc/hadoop
      - ./scripts:/opt/airflow/scripts
      - ./spark_jobs:/opt/spark/jobs
      - ./data:/data
    ports:
      - '8080:8080'
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      - AIRFLOW__CORE__FERNET_KEY=yIkGYM4sjhuCcKI306HUVBzs_fJOEHpfysLnC6cRNKA=
      - AIRFLOW__CORE__PARALLELISM=4
      - AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT=600
      - AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT=120
      - AIRFLOW__LOGGING__LOGGING_LEVEL=INFO
      # Spark Configuration
      - SPARK_HOME=/opt/spark
      - PYTHONPATH=/opt/spark/python:/opt/spark/python/lib/py4j-0.10.9-src.zip
      - SPARK_CONF_spark_jars_packages=org.postgresql:postgresql:42.5.0,com.crealytics:spark-excel_2.12:3.3.1_0.18.7
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_DRIVER_MEMORY=2g
      - SPARK_EXECUTOR_MEMORY=2g
      - SPARK_EXECUTOR_CORES=2
      - SPARK_DEFAULT_PARALLELISM=4
      # Hive Configuration
      - HIVE_HOME=/opt/hive
      - HIVE_METASTORE_URIS=thrift://hive-metastore:9083
      - HIVE_SERVER2_THRIFT_URL=jdbc:hive2://hive-server:10000
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - HDFS_NAMENODE_URL=hdfs://namenode:9000
    command: webserver
    networks:
      - data-stack

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
    user: "${AIRFLOW_UID:-50000}"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./config/spark:/opt/airflow/config/spark
      - ./config/hadoop:/opt/hadoop/etc/hadoop
      - ./spark_jobs:/opt/spark/jobs
      - ./data:/data
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      - AIRFLOW__CORE__FERNET_KEY=yIkGYM4sjhuCcKI306HUVBzs_fJOEHpfysLnC6cRNKA=
      - AIRFLOW__CORE__PARALLELISM=4
      - AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT=600
      - AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT=120
      - AIRFLOW__LOGGING__LOGGING_LEVEL=INFO
      # Spark Configuration
      - SPARK_HOME=/opt/spark
      - PYTHONPATH=/opt/spark/python:/opt/spark/python/lib/py4j-0.10.9-src.zip
      - SPARK_CONF_spark_jars_packages=org.postgresql:postgresql:42.5.0,com.crealytics:spark-excel_2.12:3.3.1_0.18.7
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_DRIVER_MEMORY=2g
      - SPARK_EXECUTOR_MEMORY=2g
      - SPARK_EXECUTOR_CORES=2
      - SPARK_DEFAULT_PARALLELISM=4
      # Hive Configuration
      - HIVE_HOME=/opt/hive
      - HIVE_METASTORE_URIS=thrift://hive-metastore:9083
      - HIVE_SERVER2_THRIFT_URL=jdbc:hive2://hive-server:10000
      - HADOOP_HOME=/opt/hadoop
      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop
      - HDFS_NAMENODE_URL=hdfs://namenode:9000
    command: scheduler
    networks:
      - data-stack

  # --- PostgreSQL for Airflow ---
  airflow-db:
    image: postgres:13
    container_name: airflow-db
    environment:
      - POSTGRES_USER=${AIRFLOW_DB_USER}
      - POSTGRES_PASSWORD=${AIRFLOW_DB_PASSWORD}
      - POSTGRES_DB=${AIRFLOW_DB_NAME}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - data-stack

  # --- Airflow Init (for database initialization) ---
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-init
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'
    user: "${AIRFLOW_UID:-50000}"
    depends_on:
      - airflow-db
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@airflow-db:5432/${AIRFLOW_DB_NAME}
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    networks:
      - data-stack

  # --- Hive ---
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
    env_file:
      - ./config/hive/hadoop-hive.env
    environment:
      - 'HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore-db/metastore'
    ports:
      - '10000:10000'
      - '10002:10002'
    volumes:
      - ./config/hive:/opt/hive/conf
    networks:
      - data-stack

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    depends_on:
      - namenode
      - datanode
      - hive-metastore-db
    env_file:
      - ./config/hive/hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      - 'HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore-db/metastore'
    ports:
      - '9083:9083'
    volumes:
      - ./config/hive:/opt/hive/conf
    networks:
      - data-stack

  hive-metastore-db:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-db
    networks:
      - data-stack

networks:
  data-stack:

volumes:
  hadoop_namenode:
  hadoop_datanode:
  postgres-db-volume:
